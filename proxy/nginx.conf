# Ejemplo de proxy Nginx delante de Odoo (HTTPS recomendado con certs reales)
# - Enruta WebSocket/longpolling a 8072
# - Activa compresión y caché estática de assets
# Ajusta 'server_name' y certificados TLS.

user  nginx;
worker_processes auto;
events { worker_connections 1024; }

http {
  include       mime.types;
  default_type  application/octet-stream;
  sendfile      on;
  keepalive_timeout  65;

  # Compresión
  gzip on;
  gzip_types text/plain text/css application/json application/javascript application/xml;
  gzip_min_length 1024;

  # Servidor Odoo
  upstream odoo_web { server odoo19:8069; }
  upstream odoo_longpoll { server odoo19:8072; }

  server {
    listen 80;
    # listen 443 ssl http2;  # <-- habilita y configura certificados para producción
    server_name _;

    # Proxy hacia Odoo web
    location / {
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_redirect off;
      proxy_pass http://odoo_web;
    }

    # Websocket/longpolling
    location /websocket/ {
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_http_version 1.1;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_pass http://odoo_longpoll;
    }

    # Cache agresiva para assets
    location ~* ^/web/(assets|content)/ {
      add_header Cache-Control "public, max-age=2592000, immutable";
      proxy_pass http://odoo_web;
    }
  }
}
